SKIPLISTS

Invented in 1990 by William Pugh, a skip list is a probabilistic data structure, based on parallel linked lists, with efficiency comparable to a binary search tree (order log n average time for most operations).

http://en.wikipedia.org/wiki/Skip_list
ftp://ftp.cs.umd.edu/pub/skipLists/skiplists.pdf


For the best search speed, probability should be 1/E 
(1/2.718281828459045 == 0.367879441171442)


CHUNKED SKIPLISTS

For effectiveness and distribution, we cut skiplists into 
contiguous chunks. Each chunk is identified by the first item.
To split list into chunks we define "cut level": chunks are
produced by cutting a list by every node which level is equal or
greater, than cut level. 

Example:

cut level = 3

     4  o-------------------------o-...
     3  o---------o-------o-------o-...
     2  o---o-----o---o---o-----o-o-...
     1  o-o-o-o-o-o-o-o-o-o-o-o-o-o-...
uuid    A B C D E F G H I J K L M T
level   4 1 2 1 1 3 1 2 1 3 1 1 2 4
cut     ^         ^       ^       ^

                  ||
                  \/

     4  o--------->T                          o-...
     3  o--------->F  o------->J  o------->T  o-...
     2  o---o----->F  o---o--->J  o-----o->T  o-...
     1  o-o-o-o-o->F  o-o-o-o->J  o-o-o-o->T  o-...
uuid    A B C D E     F G H I     J K L M     T
level   4 1 2 1 1     3 1 2 1     3 1 1 2     4
        Chunk A.      Chunk F.    Chunk J.    Chunk T.



For a sublist of length N, and cut level L the following is true:

         exp(L-1) = N;    L = log(N) + 1

If'd like N=1000 items per file, cut level'd be L=8.

N      L
========
32     4
64     5
128    6
256    7
512    7
1024   8
2048   9
4096   9
8192  10
